// This file was generated by Rainbow for .NET Core. Do not modify.
//
// Copyright (c) 2010-16 Bifrost Entertainment AS and Tommy Nguyen
// Distributed under the MIT License.
// (See accompanying file LICENSE or copy at http://opensource.org/licenses/MIT)

namespace Rainbow.Interop
{
    using System;
    using System.Runtime.InteropServices;

    [StructLayout(LayoutKind.Sequential)]
    internal sealed class UMixer : ITable
    {
        private readonly uint sizeOfStruct;
        private readonly IntPtr dtorFunc;
        private readonly IntPtr loadSoundFunc;
        private readonly IntPtr loadStreamFunc;
        private readonly IntPtr isPausedFunc;
        private readonly IntPtr isPlayingFunc;
        private readonly IntPtr setLoopCountFunc;
        private readonly IntPtr setVolumeFunc;
        private readonly IntPtr setWorldPositionFunc;
        private readonly IntPtr pauseFunc;
        private readonly IntPtr playChannelFunc;
        private readonly IntPtr playSoundFunc;
        private readonly IntPtr stopFunc;

        public uint SizeOfStruct => sizeOfStruct;

        public IntPtr DtorFunc => dtorFunc;

        public IntPtr LoadSoundFunc => loadSoundFunc;

        public IntPtr LoadStreamFunc => loadStreamFunc;

        public IntPtr IsPausedFunc => isPausedFunc;

        public IntPtr IsPlayingFunc => isPlayingFunc;

        public IntPtr SetLoopCountFunc => setLoopCountFunc;

        public IntPtr SetVolumeFunc => setVolumeFunc;

        public IntPtr SetWorldPositionFunc => setWorldPositionFunc;

        public IntPtr PauseFunc => pauseFunc;

        public IntPtr PlayChannelFunc => playChannelFunc;

        public IntPtr PlaySoundFunc => playSoundFunc;

        public IntPtr StopFunc => stopFunc;
    }
}
