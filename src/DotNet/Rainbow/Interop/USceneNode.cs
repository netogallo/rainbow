// This file was generated by Rainbow for .NET Core. Do not modify.
//
// Copyright (c) 2010-16 Bifrost Entertainment AS and Tommy Nguyen
// Distributed under the MIT License.
// (See accompanying file LICENSE or copy at http://opensource.org/licenses/MIT)

namespace Rainbow.Interop
{
    using System;
    using System.Runtime.InteropServices;

    [StructLayout(LayoutKind.Sequential)]
    internal sealed class USceneNode : ITable
    {
        private readonly uint sizeOfStruct;
        private readonly IntPtr dtorFunc;
        private readonly IntPtr isEnabledFunc;
        private readonly IntPtr setEnabledFunc;
        private readonly IntPtr addChildFunc;
        private readonly IntPtr addChildAnimationFunc;
        private readonly IntPtr addChildLabelFunc;
        private readonly IntPtr addChildNodeFunc;
        private readonly IntPtr addChildSpritebatchFunc;
        private readonly IntPtr moveFunc;
        private readonly IntPtr removeFunc;

        public uint SizeOfStruct => sizeOfStruct;

        public IntPtr DtorFunc => dtorFunc;

        public IntPtr IsEnabledFunc => isEnabledFunc;

        public IntPtr SetEnabledFunc => setEnabledFunc;

        public IntPtr AddChildFunc => addChildFunc;

        public IntPtr AddChildAnimationFunc => addChildAnimationFunc;

        public IntPtr AddChildLabelFunc => addChildLabelFunc;

        public IntPtr AddChildNodeFunc => addChildNodeFunc;

        public IntPtr AddChildSpritebatchFunc => addChildSpritebatchFunc;

        public IntPtr MoveFunc => moveFunc;

        public IntPtr RemoveFunc => removeFunc;
    }
}
