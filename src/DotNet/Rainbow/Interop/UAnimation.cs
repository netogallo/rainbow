// This file was generated by Rainbow for .NET Core. Do not modify.
//
// Copyright (c) 2010-16 Bifrost Entertainment AS and Tommy Nguyen
// Distributed under the MIT License.
// (See accompanying file LICENSE or copy at http://opensource.org/licenses/MIT)

namespace Rainbow.Interop
{
    using System;
    using System.Runtime.InteropServices;

    [StructLayout(LayoutKind.Sequential)]
    internal sealed class UAnimation : ITable
    {
        private readonly uint sizeOfStruct;
        private readonly IntPtr ctorFunc;
        private readonly IntPtr dtorFunc;
        private readonly IntPtr currentFrameFunc;
        private readonly IntPtr frameRateFunc;
        private readonly IntPtr isStoppedFunc;
        private readonly IntPtr setDelayFunc;
        private readonly IntPtr setEventHandlerFunc;
        private readonly IntPtr setFrameRateFunc;
        private readonly IntPtr setFramesFunc;
        private readonly IntPtr setSpriteFunc;
        private readonly IntPtr jumpToFunc;
        private readonly IntPtr startFunc;
        private readonly IntPtr stopFunc;

        public uint SizeOfStruct => sizeOfStruct;

        public IntPtr CtorFunc => ctorFunc;

        public IntPtr DtorFunc => dtorFunc;

        public IntPtr CurrentFrameFunc => currentFrameFunc;

        public IntPtr FrameRateFunc => frameRateFunc;

        public IntPtr IsStoppedFunc => isStoppedFunc;

        public IntPtr SetDelayFunc => setDelayFunc;

        public IntPtr SetEventHandlerFunc => setEventHandlerFunc;

        public IntPtr SetFrameRateFunc => setFrameRateFunc;

        public IntPtr SetFramesFunc => setFramesFunc;

        public IntPtr SetSpriteFunc => setSpriteFunc;

        public IntPtr JumpToFunc => jumpToFunc;

        public IntPtr StartFunc => startFunc;

        public IntPtr StopFunc => stopFunc;
    }
}
