// This file was generated by Rainbow for .NET Core. Do not modify.
//
// Copyright (c) 2010-16 Bifrost Entertainment AS and Tommy Nguyen
// Distributed under the MIT License.
// (See accompanying file LICENSE or copy at http://opensource.org/licenses/MIT)

namespace Rainbow.Graphics
{
    using System;

    using Interop;

    /// <content>
    /// Contains unmanaged delegates for <see cref="SpriteBatch"/>.
    /// </content>
    public sealed partial class SpriteBatch : NativeObject<SpriteBatch>
    {
        private static FuncUP ctor;
        private static MemberFuncU count;
        private static MemberFuncB isVisible;
        private static MemberActionP setNormal;
        private static MemberActionP setTexture;
        private static MemberActionB setVisible;
        private static MemberActionU bringToFront;
        private static MemberAction clear;
        private static MemberFuncUUU createSprite;
        private static MemberActionU erase;
        private static MemberFuncIU findSpriteById;
        private static MemberActionV move;
        private static MemberActionUU swap;

        internal static void InitializeComponents(IntPtr ptr)
        {
            var ftable = InitializeComponents<USpriteBatch>(ptr);
            GetDelegateForFunctionPointer(ftable.CtorFunc, out ctor);
            GetDelegateForFunctionPointer(ftable.CountFunc, out count);
            GetDelegateForFunctionPointer(ftable.IsVisibleFunc, out isVisible);
            GetDelegateForFunctionPointer(ftable.SetNormalFunc, out setNormal);
            GetDelegateForFunctionPointer(ftable.SetTextureFunc, out setTexture);
            GetDelegateForFunctionPointer(ftable.SetVisibleFunc, out setVisible);
            GetDelegateForFunctionPointer(ftable.BringToFrontFunc, out bringToFront);
            GetDelegateForFunctionPointer(ftable.ClearFunc, out clear);
            GetDelegateForFunctionPointer(ftable.CreateSpriteFunc, out createSprite);
            GetDelegateForFunctionPointer(ftable.EraseFunc, out erase);
            GetDelegateForFunctionPointer(ftable.FindSpriteByIdFunc, out findSpriteById);
            GetDelegateForFunctionPointer(ftable.MoveFunc, out move);
            GetDelegateForFunctionPointer(ftable.SwapFunc, out swap);
        }
    }
}
