// This file was generated by Rainbow for .NET Core. Do not modify.
//
// Copyright (c) 2010-16 Bifrost Entertainment AS and Tommy Nguyen
// Distributed under the MIT License.
// (See accompanying file LICENSE or copy at http://opensource.org/licenses/MIT)

namespace Rainbow.Graphics
{
    using System;

    using Interop;

    /// <content>
    /// Contains unmanaged delegates for <see cref="Sprite"/>.
    /// </content>
    public sealed partial class Sprite : NativeObject<Sprite>
    {
        private static MemberFuncUF getAngle;
        private static MemberFuncUCb getColor;
        private static MemberFuncUU getHeight;
        private static MemberFuncUI getId;
        private static MemberFuncUB isFlipped;
        private static MemberFuncUB isHidden;
        private static MemberFuncUB isMirrored;
        private static MemberFuncUV getPivot;
        private static MemberFuncUV getPosition;
        private static MemberFuncUV getScale;
        private static MemberFuncUU getWidth;
        private static MemberActionUCb setColor;
        private static MemberActionUB setFlipped;
        private static MemberActionUI setId;
        private static MemberActionUB setMirrored;
        private static MemberActionUU setNormal;
        private static MemberActionUV setPivot;
        private static MemberActionUV setPosition;
        private static MemberActionUF setRotation;
        private static MemberActionUV setScale;
        private static MemberActionUU setTexture;
        private static MemberActionU hide;
        private static MemberActionU show;

        internal static void InitializeComponents(IntPtr ptr)
        {
            var ftable = InitializeComponents<USprite>(ptr);
            GetDelegateForFunctionPointer(ftable.GetAngleFunc, out getAngle);
            GetDelegateForFunctionPointer(ftable.GetColorFunc, out getColor);
            GetDelegateForFunctionPointer(ftable.GetHeightFunc, out getHeight);
            GetDelegateForFunctionPointer(ftable.GetIdFunc, out getId);
            GetDelegateForFunctionPointer(ftable.IsFlippedFunc, out isFlipped);
            GetDelegateForFunctionPointer(ftable.IsHiddenFunc, out isHidden);
            GetDelegateForFunctionPointer(ftable.IsMirroredFunc, out isMirrored);
            GetDelegateForFunctionPointer(ftable.GetPivotFunc, out getPivot);
            GetDelegateForFunctionPointer(ftable.GetPositionFunc, out getPosition);
            GetDelegateForFunctionPointer(ftable.GetScaleFunc, out getScale);
            GetDelegateForFunctionPointer(ftable.GetWidthFunc, out getWidth);
            GetDelegateForFunctionPointer(ftable.SetColorFunc, out setColor);
            GetDelegateForFunctionPointer(ftable.SetFlippedFunc, out setFlipped);
            GetDelegateForFunctionPointer(ftable.SetIdFunc, out setId);
            GetDelegateForFunctionPointer(ftable.SetMirroredFunc, out setMirrored);
            GetDelegateForFunctionPointer(ftable.SetNormalFunc, out setNormal);
            GetDelegateForFunctionPointer(ftable.SetPivotFunc, out setPivot);
            GetDelegateForFunctionPointer(ftable.SetPositionFunc, out setPosition);
            GetDelegateForFunctionPointer(ftable.SetRotationFunc, out setRotation);
            GetDelegateForFunctionPointer(ftable.SetScaleFunc, out setScale);
            GetDelegateForFunctionPointer(ftable.SetTextureFunc, out setTexture);
            GetDelegateForFunctionPointer(ftable.HideFunc, out hide);
            GetDelegateForFunctionPointer(ftable.ShowFunc, out show);
        }
    }
}
